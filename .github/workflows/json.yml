name: JSON Validation

on:
  push:
    paths:
      - "*.json"
  pull_request:
    paths:
      - "*.json"

env:
  JSON_DIR: .
  JSON_FILE: knowledgebase.json

jobs:
  validate-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout full repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN_CIRCASSIANDNA }}
          fetch-depth: 0   # fetch full history

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Validate JSON with jq
        run: |
          for file in $(find $JSON_DIR -name "*.json" || true); do
            echo "Checking $file"
            jq empty "$file"
          done

      - name: Setup Node.js for faster installs.
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install jsonlint and prettier
        run: npm install -g jsonlint prettier

      - name: Validate JSON with jsonlint
        run: |
          for file in $(find $JSON_DIR -name "*.json"); do
            echo "Linting $file"
            jsonlint -q "$file"
          done

      - name: Check JSON formatting
        id: check
        run: |
          set +e
          prettier --check "$JSON_DIR/**/*.json"
          echo "CHECK_EXIT_CODE=$?" >> $GITHUB_ENV
          set -e

      - name: Auto-format JSON if check failed
        if: env.CHECK_EXIT_CODE != '0'
        run: prettier --write "$JSON_DIR/**/*.json"

      - name: Check JSON formatting again
        if: env.CHECK_EXIT_CODE != '0'
        run: prettier --check "$JSON_DIR/**/*.json"

      # - name: Commit formatted JSON if changes were made and not failed
      #   env:
      #     PAT: ${{ secrets.PAT_TOKEN_CIRCASSIANDNA }}
      #   run: |
      #     git config user.name "GitHub Actions"
      #     git config user.email "actions@github.com"

      #     # Fetch the latest remote branch
      #     git fetch origin deployment
      #     git checkout deployment
      #     git reset --hard origin/deployment  # reset local branch to remote

      #     # Stage changes
      #     git add ${{ env.JSON_DIR }}/${{ env.JSON_FILE }}
      #     git add ${{ env.JSON_DIR }}/tests/*.json

      #     # Commit only if there are changes
      #     git diff --cached --quiet || git commit -m "Format JSON files with Prettier."

      #     # Push changes safely
      #     git push https://kabartay:${PAT}@github.com/kabartay/circassiandna-chatbot.git HEAD:deployment --force-with-lese